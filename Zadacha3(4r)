//Разложение в сумму. Дано натуральное число n. Написать рекурсивную процедуру генерации всех разбиений числа n на сумму слагаемых 
//n = a1+a2+…+ak, 		где k, a1, a2, …, ak >0
//в порядке, обратном лексикографическому. Например, при n=4, требуется вывести 4, 3+1, 2+2, 2+1+1, 1+1+1+1. Разбиения считаются эквивалентными, 
//если суммы отличаются только порядком слагаемых.Формат входных данных:На вход подается одно натуральное число n (n<15).Формат выходных данных:
//На выходе нужно получить все возможные разложения числа n в сумму слагаемых. В частном случае, суммой может быть одно число. Каждую сумму выводить в отдельной строке. 
//Если элементов суммы больше двух, то разделять элементы знаками ‘+’. . Результат выводить в текстовый файл!!

#include <iostream>
#include <stdio.h>
#include <fstream>
#include <string>
using namespace std;

int a[100];
ofstream file("C:\\test\\testfile.txt");
void dec(int n, int k, int i) {
    if (n < 0) return;
    if (n == 0) {
        int j;
        for (j = 0; j < i; j++) {
            if (i == 1) file << a[j];
            else if (j + 1 == i) file << a[j];
            else file << a[j] << '+';
        }
        file << endl;

    }
    else {
        if (n - k >= 0) {
            a[i] = k;
            dec(n - k, k, i + 1);
        }

        if (k - 1 > 0) {
            dec(n, k - 1, i);
        }
    }
    return;
}

int main() {
    int m, i, j;
    cin >> m;
    for (i = 0; i <= m; i++) {
        a[i] = 0;
    }
    dec(m, m, 0);
    return 0;
}
